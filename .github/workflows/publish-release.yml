name: Reusable Publish Release Workflow

on:
  workflow_call:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
        type: string
      repository_name:
        description: 'Repository name'
        required: true
        type: string

# 统一配置权限，调用方无需声明
permissions:
  contents: write
  actions: read
  checks: write
  packages: write

jobs:
  publish-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有提交历史，用于生成完整的changelog

      - name: Set up Git user
        run: |
          git config --global user.email "${{ vars.GIT_USER_EMAIL }}"
          git config --global user.name "${{ vars.GIT_USER_NAME }}"

      - name: Delete existing tag (if exists)
        run: |
          if git tag -l "${{ inputs.tag_name }}" | grep -q "${{ inputs.tag_name }}"; then
            echo "Deleting existing tag ${{ inputs.tag_name }}"
            git tag -d "${{ inputs.tag_name }}"
            git push origin --delete "${{ inputs.tag_name }}" || echo "Remote tag does not exist"
          else
            echo "Tag ${{ inputs.tag_name }} does not exist locally"
          fi

      - name: "✏️ Generate release changelog"
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit CHANGELOG.md
        run: |
          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to commit for CHANGELOG.md"
          else
            git commit -m "[修改] 修改更新日志"
          fi

      - name: Update package.json version
        run: |
          # 检查 package.json 是否存在
          if [ -f "package.json" ]; then
            echo "Found package.json, updating version to ${{ inputs.tag_name }}"
            
            # 使用 jq 更新 package.json 中的 version 字段
            jq '.version = "${{ inputs.tag_name }}"' package.json > package.json.tmp
            mv package.json.tmp package.json
            
            echo "Updated package.json version to ${{ inputs.tag_name }}"
            cat package.json | jq '.version'
          else
            echo "package.json not found, skipping version update"
          fi

      - name: Commit version changes
        run: |
          git add package.json
          if git diff --staged --quiet; then
            echo "No version changes to commit"
          else
            git commit -m "[修改] 修改版本号为${{ inputs.tag_name }}"
          fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force_with_lease: true
          tags: false

      - name: Create and push new tag
        run: |
          echo "Creating new tag ${{ inputs.tag_name }} at current commit"
          git tag -a "${{ inputs.tag_name }}" -m "Release ${{ inputs.tag_name }}"
          git push origin "${{ inputs.tag_name }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag_name }}
          name: Release ${{ inputs.tag_name }}
          body: |
            ## 🎉 Release ${{ inputs.tag_name }}
            
            This release was automatically generated from tag `${{ inputs.tag_name }}`.
            
            ### 📋 Changes
            Please check the [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
            
            ### 📦 Repository
            Repository: ${{ inputs.repository_name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Sync Workflow
        uses: ./.github/workflows/sync.yml
        with:
          target_branch: ${{ github.ref_name }}
          repository_name: ${{ inputs.repository_name }}